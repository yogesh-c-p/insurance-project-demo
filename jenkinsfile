pipeline {
    agent any

    stages {
        stage('git checkout') {
            steps {
                git 'https://github.com/yogesh-c-p/insurance-project-demo.git'

            }
        }
         stage('build maven') {
            steps {
                sh 'mvn clean package'

            }
        }
        stage('build docker image') {
            steps {
                sh 'docker build -t yogesha/insurance:1.0 .'

            }
        } 
        stage('docker image push to docker hub') {
            steps {
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerhub')]) {
                    sh "docker login -u yogesha -p ${dockerhub}"
                    sh 'docker push yogesha/insurance:1.0'
    
                }
                

            }
        }
        stage('configure and deploy into the test server') {
            steps {
                ansiblePlaybook become: true, credentialsId: 'ansible-ssh-key', disableHostKeyChecking: true, installation: 'Ansible', inventory: '/etc/ansible/hosts', playbook: 'configure-testserver.yml'
            }
        }
        stage('run Selenium jar file') {
            steps {
                sh 'java -jar selenium.jar'
            }
        } 
        stage('configure and deploy into the prod server') {
            steps {
                ansiblePlaybook become: true, credentialsId: 'ansible-ssh-key', disableHostKeyChecking: true, installation: 'Ansible', inventory: '/etc/ansible/hosts/', playbook: 'configure-prodserver.yml'
                
            }
        } 
    }
}
